# This workflow will build a docker container, publish it to Azure Container Registry, and deploy it to Azure Kubernetes Service using a helm chart.
#
# https://github.com/Azure/actions-workflow-samples/tree/master/Kubernetes
#
# To configure this workflow:
#
# 1. Set up the following secrets in your workspace:
#     a. REGISTRY_USERNAME with ACR username
#     b. REGISTRY_PASSWORD with ACR Password
#     c. AZURE_CREDENTIALS with the output of `az ad sp create-for-rbac --sdk-auth`
#
# 2. Change the values for the REGISTRY_NAME, CLUSTER_NAME, CLUSTER_RESOURCE_GROUP and NAMESPACE environment variables (below).
name: build
on: [push, pull_request]

# Environment variables available to all jobs and steps in this workflow
env:
  REGISTRY_NAME: k8scc01covidacr
  CLUSTER_NAME: k8s-cancentral-01-covid-aks
  CLUSTER_RESOURCE_GROUP: k8s-cancentral-01-covid-aks
  STORAGE_ACCOUNT_NAME: k8scovid
  NAMESPACE: web
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    # Connect to Azure Container registry (ACR)
    - uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    # Container build and push to a Azure Container registry (ACR)
    - run: |
        # Minimal Notebook
        docker build -f minimal-notebook/Dockerfile -t ${{ env.REGISTRY_NAME }}.azurecr.io/minimal-notebook:${{ github.sha }} .
        docker push ${{ env.REGISTRY_NAME }}.azurecr.io/minimal-notebook:${{ github.sha }}
        docker tag ${{ env.REGISTRY_NAME }}.azurecr.io/minimal-notebook:${{ github.sha }} ${{ env.REGISTRY_NAME }}.azurecr.io/minimal-notebook:${GITHUB_REF#refs/*/}
        docker push ${{ env.REGISTRY_NAME }}.azurecr.io/minimal-notebook:${GITHUB_REF#refs/*/}
        docker system prune -f -a
        # R Notebook
        docker build -f geomatics-notebook/Dockerfile -t ${{ env.REGISTRY_NAME }}.azurecr.io/geomatics-notebook:${{ github.sha }} .
        docker push ${{ env.REGISTRY_NAME }}.azurecr.io/geomatics-notebook:${{ github.sha }}
        docker tag ${{ env.REGISTRY_NAME }}.azurecr.io/geomatics-notebook:${{ github.sha }} ${{ env.REGISTRY_NAME }}.azurecr.io/geomatics-notebook:${GITHUB_REF#refs/*/}
        docker push ${{ env.REGISTRY_NAME }}.azurecr.io/geomatics-notebook:${GITHUB_REF#refs/*/}
        docker system prune -f -a
        # Tensorflow Notebook for CPU based workload
        docker build -f tensorflow-notebook/cpu/Dockerfile -t ${{ env.REGISTRY_NAME }}.azurecr.io/tensorflow-notebook-cpu:${{ github.sha }} .
        docker push ${{ env.REGISTRY_NAME }}.azurecr.io/tensorflow-notebook-cpu:${{ github.sha }}
        docker tag ${{ env.REGISTRY_NAME }}.azurecr.io/tensorflow-notebook-cpu:${{ github.sha }} ${{ env.REGISTRY_NAME }}.azurecr.io/tensorflow-notebook-cpu:${GITHUB_REF#refs/*/}
        docker push ${{ env.REGISTRY_NAME }}.azurecr.io/tensorflow-notebook-cpu:${GITHUB_REF#refs/*/}
        docker system prune -f -a
        # Tensorflow Notebook for GPU based workload
        docker build -f tensorflow-notebook/gpu/Dockerfile -t ${{ env.REGISTRY_NAME }}.azurecr.io/tensorflow-notebook-gpu:${{ github.sha }} tensorflow-notebook/gpu
        docker push ${{ env.REGISTRY_NAME }}.azurecr.io/tensorflow-notebook-gpu:${{ github.sha }}
        docker tag ${{ env.REGISTRY_NAME }}.azurecr.io/tensorflow-notebook-gpu:${{ github.sha }} ${{ env.REGISTRY_NAME }}.azurecr.io/tensorflow-notebook-gpu:${GITHUB_REF#refs/*/}
        docker push ${{ env.REGISTRY_NAME }}.azurecr.io/tensorflow-notebook-gpu:${GITHUB_REF#refs/*/}
        docker system prune -f -a
